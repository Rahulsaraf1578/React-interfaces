{"version":3,"sources":["components/Search.js","components/AddAppointment.js","components/AppointmentInfo.js","App.js","index.js"],"names":["DropDown","toggle","sortBy","onSortByChange","orderBy","onOrderByChange","className","role","aria-orientation","aria-labelledby","onClick","Search","query","onQueryChange","useState","toggleSort","setToggleSort","htmlFor","type","name","id","value","onChange","event","target","placeholder","aria-haspopup","aria-expanded","mySort","AddAppointment","onSendAppointment","lastId","clearData","ownerName","petName","aptDate","aptTime","aptNotes","toggleForm","setToggleForm","formData","setFormData","rows","appointmentInfo","AppointmentInfo","appointment","onDeleteAppointment","App","appointmentList","setAppointmentList","setQuery","setSortBy","setOrderBy","filteredAppointments","filter","item","toLowerCase","includes","sort","a","b","order","fetchData","useCallback","fetch","then","response","json","data","useEffect","myAppointment","reduce","max","Number","myQuery","map","appointmentId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ecfc579b.chunk.js","sourcesContent":["import { BiCaretDown,BiSearch, BiCheck } from \"react-icons/bi\"\nimport { useState } from \"react\"\n\n// Drop down options\nconst DropDown = ({toggle, sortBy, onSortByChange,orderBy, onOrderByChange}) => {\n    if(!toggle){\n        return null;\n    }\n    return(\n        <div className=\"origin-top-right absolute right-0 mt-2 w-56\n        rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5\">\n            <div className=\"py-1\" role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"options-menu\">\n            <div onClick= {() => onSortByChange('petName')}\n                className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex justify-between cursor-pointer\"\n                role=\"menuitem\">Pet Name {(sortBy==='petName') && <BiCheck />}</div>\n            <div onClick= {() => onSortByChange('ownerName')}\n                className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex justify-between cursor-pointer\"\n                role=\"menuitem\">Owner Name  {(sortBy==='ownerName') && <BiCheck />}</div>\n            <div onClick= {() => onSortByChange('aptDate')}\n                className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex justify-between cursor-pointer\"\n                role=\"menuitem\">Date {(sortBy==='aptDate') && <BiCheck />}</div>\n            <div onClick= {() => onOrderByChange('asc')}\n                className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex justify-between cursor-pointer border-gray-1 border-t-2\"\n                role=\"menuitem\">Asc {(orderBy==='asc') && <BiCheck />}</div>\n            <div onClick= {() => onOrderByChange('desc')}\n                className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex justify-between cursor-pointer\"\n                role=\"menuitem\">Desc {(orderBy==='desc') && <BiCheck />}</div>\n            </div>\n        </div>\n    )\n}\n\nconst Search = ({query,onQueryChange,sortBy,onSortByChange,orderBy,onOrderByChange}) =>{\n    let [toggleSort,setToggleSort] = useState(false);\n\n    return(\n        <div className=\"py-5\">\n            <div className=\"mt-1 relative rounded-md shadow-sm\">\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                    <BiSearch />\n                    <label htmlFor=\"query\" className=\"sr-only\" />\n                </div>\n                <input type=\"text\" name=\"query\" id=\"query\" value={query}\n                    onChange={(event)=>{onQueryChange(event.target.value)}}\n                    className=\"pl-8 rounded-md focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300\" placeholder=\"Search\" />\n                <div className=\"absolute inset-y-0 right-0 flex items-center\">\n                    <div>\n                    <button type=\"button\" onClick={()=>{setToggleSort(!toggleSort)}}\n                        className=\"justify-center px-4 py-2 bg-blue-400 border-2 border-blue-400 text-sm text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 flex items-center\" id=\"options-menu\" aria-haspopup=\"true\" aria-expanded=\"true\"\n                        >\n                        Sort By <BiCaretDown className=\"ml-2\" />\n                    </button>\n                    <DropDown toggle={toggleSort}\n                            orderBy={orderBy}\n                            onOrderByChange={mySort=>onOrderByChange(mySort)}\n                            sortBy={sortBy}\n                            onSortByChange = {mySort=>onSortByChange(mySort)}\n                    />\n                    </div>\n                </div>\n            </div>\n      </div>\n    )\n}\n\nexport default Search","import { BiCalendarPlus } from \"react-icons/bi\";\nimport { useState } from \"react\";\n\nconst AddAppointment = ({onSendAppointment,lastId}) =>{\n    const clearData = {\n            ownerName:'',\n            petName:'',\n            aptDate:'',\n            aptTime:'',\n            aptNotes:''\n    }\n    let [toggleForm, setToggleForm]= useState(false);\n    let [formData, setFormData] = useState(clearData);\n\n    function formDataPublish  ()  {\n        const appointmentInfo = {\n            id:lastId+1,\n            ownerName:formData.ownerName,\n            petName:formData.petName,\n            aptDate:formData.aptDate + ' '+formData.aptTime,\n            aptNotes:formData.aptNotes\n        }\n        onSendAppointment(appointmentInfo);\n        setFormData(clearData)\n        setToggleForm(!toggleForm)\n    }\n\n    return(\n        <div>\n            <button className={`bg-blue-400 text-white px-2 py-3 w-full text-left rounded-t-md\n            ${toggleForm?'rounded-t-md':'rounded-md'}`}\n            onClick={()=>{setToggleForm(!toggleForm)}}>\n            <div><BiCalendarPlus className=\"inline-block align-text-top\" />  Add Appointment</div>\n            </button>\n            {\n                toggleForm && \n                <div className=\"border-r-2 border-b-2 border-l-2 border-light-blue-500 rounded-b-md pl-4 pr-4 pb-4\">\n            <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\n                <label htmlFor=\"ownerName\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\n                Owner Name\n                </label>\n                <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\n                <input type=\"text\" name=\"ownerName\" id=\"ownerName\"\n                    onChange={(event)=>{setFormData({...formData,ownerName:event.target.value})}}\n                    value={formData.ownerName}\n                    className=\"max-w-lg block w-full shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:max-w-xs sm:text-sm border-gray-300 rounded-md\" />\n                </div>\n            </div>\n    \n            <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\n                <label htmlFor=\"petName\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\n                Pet Name\n                </label>\n                <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\n                <input type=\"text\" name=\"petName\" id=\"petName\"\n                     onChange={(event)=>{setFormData({...formData,petName:event.target.value})}}\n                     value={formData.petName}\n                    className=\"max-w-lg block w-full shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:max-w-xs sm:text-sm border-gray-300 rounded-md\" />\n                </div>\n            </div>\n    \n            <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\n                <label htmlFor=\"aptDate\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\n                Apt Date\n                </label>\n                <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\n                <input type=\"date\" name=\"aptDate\" id=\"aptDate\"\n                    onChange={(event)=>{setFormData({...formData,aptDate:event.target.value})}}\n                    value={formData.aptDate}\n                    className=\"max-w-lg block w-full shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:max-w-xs sm:text-sm border-gray-300 rounded-md\" />\n                </div>\n            </div>\n    \n            <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\n                <label htmlFor=\"aptTime\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\n                Apt Time\n                </label>\n                <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\n                <input type=\"time\" name=\"aptTime\" id=\"aptTime\"\n                     onChange={(event)=>{setFormData({...formData,aptTime:event.target.value})}}\n                     value={formData.aptTime}\n                    className=\"max-w-lg block w-full shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:max-w-xs sm:text-sm border-gray-300 rounded-md\" />\n                </div>\n            </div>\n    \n            <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\n                <label htmlFor=\"aptNotes\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\n                Appointment Notes\n                </label>\n                <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\n                <textarea id=\"aptNotes\" name=\"aptNotes\" rows=\"3\"\n                     onChange={(event)=>{setFormData({...formData,aptNotes:event.target.value})}}\n                     value={formData.aptNotes}\n                    className=\"shadow-sm focus:ring-indigo-500 focus:border-indigo-500 mt-1 block w-full sm:text-sm border-gray-300 rounded-md\" placeholder=\"Detailed comments about the condition\"></textarea>\n                </div>\n            </div>\n    \n    \n            <div className=\"pt-5\">\n                <div className=\"flex justify-end\">\n                <button type=\"submit\" onClick={formDataPublish} className=\"ml-3 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-400 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-400\">\n                    Submit\n                </button>\n                </div>\n            </div>\n            </div>\n            }\n      </div>\n    )\n}\n\nexport default AddAppointment","import { BiTrash } from \"react-icons/bi\"\n\nconst AppointmentInfo = ({appointment, onDeleteAppointment}) =>{\nreturn(\n    <li className=\"px-3 py-3 flex items-start\">\n        <button onClick={()=> onDeleteAppointment(appointment.id)} type=\"button\"\n            className=\"p-1.5 mr-1.5 mt-1 rounded text-white bg-red-500 hover:bg-yellow-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\">\n        <BiTrash /></button>\n        <div className=\"flex-grow\">\n            <div className=\"flex items-center\">\n                <span className=\"flex-none font-medium text-2xl text-blue-500\">{appointment.petName}</span>\n                <span className=\"flex-grow text-right\">{appointment.aptDate}</span>\n            </div>\n            <div><b className=\"font-bold text-blue-500\">Owner:</b> {appointment.ownerName}</div>\n            <div className=\"leading-tight\">{appointment.aptNotes}</div>\n        </div>\n    </li>\n)\n}\n\nexport default AppointmentInfo","import { useState, useEffect, useCallback } from 'react'\nimport { BiCalendar } from \"react-icons/bi\"\nimport Search from \"./components/Search\"\nimport AddAppointment from \"./components/AddAppointment\"\nimport AppointmentInfo from \"./components/AppointmentInfo\"\n\nfunction App() {\n\n  let [appointmentList, setAppointmentList] = useState([]);\n  let [query,setQuery] = useState(\"\")\n  let [sortBy, setSortBy] = useState(\"petName\")\n  let [orderBy, setOrderBy] = useState(\"asc\")\n\n\n  const filteredAppointments = appointmentList.filter(\n    item =>{\n      return(\n        item.petName.toLowerCase().includes(query.toLowerCase()) ||\n        item.ownerName.toLowerCase().includes(query.toLowerCase()) ||\n        item.aptNotes.toLowerCase().includes(query.toLowerCase()) \n      )\n    }\n  ).sort((a,b)=>{\n    let order = (orderBy==='asc') ? 1:-1;\n    return(\n      a[sortBy].toLowerCase()<\n      b[sortBy].toLowerCase() ?\n      -1*order:1*order\n    )\n  }) \n\n  const fetchData = useCallback(() => {\n    fetch('./data.json')\n      .then(response => response.json())\n      .then(data => {\n        setAppointmentList(data)\n      });\n  }, [])\n\n  useEffect(() => {\n    fetchData()\n  }, [fetchData]);\n\n  return (\n    <div className=\"App container mx-auto mt-3 font-thin\">\n      <h1 className=\"text-5xl mb-3\">\n        <BiCalendar className=\"inline-block text-red-400 align-top\" />Your Appointments</h1>\n      <AddAppointment \n        onSendAppointment={myAppointment=>setAppointmentList([...appointmentList,myAppointment])}\n        lastId={appointmentList.reduce((max,item)=>Number(item.id)>max?Number(item.id):max,0)}\n      />\n      <Search query={query} \n      // Recieve something in myQuery and then pass it in setQuery\n      onQueryChange={myQuery => setQuery(myQuery)}\n      orderBy={orderBy}\n      onOrderByChange={mySort=>setOrderBy(mySort)}\n      sortBy={sortBy}\n      onSortByChange = {mySort=>setSortBy(mySort)}\n      />\n\n      <ul className=\"divide-y divide-gray-200\">\n        {filteredAppointments\n          .map(appointment => (\n            <AppointmentInfo key={appointment.id}\n              appointment={appointment}\n              onDeleteAppointment={\n                appointmentId => \n                setAppointmentList(appointmentList.filter(appointment =>\n                  appointment.id!==appointmentId\n                ))\n              }\n            />\n          ))\n        }\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}